user  www-data;
worker_processes auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Strange. But found it on google
    server_names_hash_bucket_size 64;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /opt/local/var/log/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    client_max_body_size 0; # disable limit


    # Gem instances for load balancing
    upstream gems {
        ip_hash;
            
        {% for port in via.gemPorts %}
        server 127.0.0.1:{{port}} max_conns=1 max_fails=3;
        {% endfor %}

		}

    
    # Via Server
    server {

				{% if via.useSsl %}
				
				listen 443 ssl http2;

				ssl_certificate /etc/letsencrypt/live/{{via.appDomain}}/fullchain.pem;
				ssl_certificate_key /etc/letsencrypt/live/{{via.appDomain}}/privkey.pem;
				include /etc/letsencrypt/options-ssl-nginx.conf;
				ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

				{% else %}
				listen 80;
				{% endif %}

        server_name {{via.appDomain}} {{via.appDomain2}};

        root {{via.installationPath}}/via_base/web_root;


        # Pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        # For uploader PlUpload
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/run/php/php7.2-fpm.sock;
        }
        
        location / {

						{% if via.isBeta %}
            # BETA TEST
            auth_basic           "App Beta-Test";
            auth_basic_user_file htpasswd_betatest;
						{% endif %}
            
            root {{via.installationPath}}/via_base/web_root;
            try_files $uri @gemstone;
        }


				# Reverse proxy to GemStone gems
        location @gemstone {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0, proxy-revalidate";
            proxy_pass http://gems;
            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }


        # X-Sendfile for generated files (ZIP, PDF, ...)
        location {{via.installationPath}}/via_base/main/tmp {
            internal;
            root /;
        }

				# Custom error page, if App is not running (looks nicer)
				error_page 502 /errors/502.html;

    }

		{% if via.useSsl %}
    # Redirect HTTP->HTTPS
		server {
        listen     80;
     		server_name {{via.appDomain}} {{via.appDomain2}};
       	return 301 https://$host$request_uri;
    }
		{% endif %}


    # Reject access with just the IP. We do not want bots or other dark forces to annoy us
    server {
				listen 80 default_server;

				{% if via.useSsl %}
				
				listen 443 ssl http2 default_server;

				ssl_certificate /etc/letsencrypt/live/{{via.appDomain}}/fullchain.pem;
				ssl_certificate_key /etc/letsencrypt/live/{{via.appDomain}}/privkey.pem;
				include /etc/letsencrypt/options-ssl-nginx.conf;
				ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

				{% endif %}

        server_name _;

        return 444; # Special code from nginx, just fails and does not return anything to caller
    }


}
