  - include_tasks: tasks_firewall.yml

  # - name: Give via sudo permission. Will be removed at the end of installation.
  #   copy:
  #     content: 'via ALL=(ALL) NOPASSWD:ALL'
  #     dest: /etc/sudoers.d/via
  #     owner: root
  #     group: root


  #
  # Sysctl settings
  #
  # - name: Reduce swappiness. Use memory first. Better for MongoDB.
  #   sysctl:
  #     name: "vm.swappiness"
  #     value: "1"
  #     state: present


  - name: Environment file
    become_user: root
    template:
      src: files/via.env.j2
      dest: /etc/profile.d/Z99-via.sh
      owner: root
      group: root

  - name: Copy SSH config
    copy:
      src: files/ssh/config
      dest: "/home/{{remoteUser}}/.ssh/config"
      owner: "{{remoteUser}}"
      group: "{{remoteUser}}"

  - name: Set up multiple authorized keys
    authorized_key:
      user: "{{remoteUser}}"
      state: present
      key: "{{lookup('file', item)}}"
    with_fileglob:
      - "files/ssh/authorized_keys/*"

  #
  # hosts file
  #
  - name: local via domain in hosts file
    lineinfile:
      path: /etc/hosts
      line: 127.0.0.1 via.local

  - name: Ensure hostname is resolved in hosts file
    lineinfile:
      path: /etc/hosts
      line: "127.0.0.1 {{ansible_hostname}}"
      
        
  - name: Install basic apt packages
    apt:
      name: ['unattended-upgrades', 'monit', 'git', 'imagemagick', 'htop', 'unzip', 'zip', 'aptitude', 'mosh', 'python3-pip', 'mediainfo', 'ffmpeg', 'wkhtmltopdf', 'xpra', 'pigz' ]
      state: present

  # - name: Check if wkhtmltopdf is present
  #   stat:
  #     path: /usr/local/bin/wkhtmltopdf
  #   register: result
    
  # - name: Install special version of wkhtmltopdf
  #   apt:
  #     deb: https://downloads.wkhtmltopdf.org/0.12/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb
  #   when: result.stat.exists == false


  - name: ImageMagick policy File (to allow processing of PDF, ...)
    copy:
      src: files/imagemagick/policy.xml
      dest: /etc/ImageMagick-6/policy.xml
      owner: 'root'
      group: 'root'
      
      
  # - name: Install snaps
  #   snap:
  #     name:
  #       - pdftk
    


  # PHP (NGINX Upload helper)
  - name: PHP for nginx
    apt: pkg=php-fpm
  - name: via php.ini settings
    copy:
      src: files/nginx/php.ini
      dest: /etc/php/7.2/fpm/conf.d/99-via.ini
      owner: 'root'
      group: 'root'
    notify:
      - restart PHP

  
  #
  # NGINX WEBSERVER
  #
  - name: nginx.conf file
    template:
      src: files/nginx/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      owner: 'root'
      group: 'root'
    notify:
      - restart nginx

  - name: lib f√ºr htpasswd module
    when: via.isBeta
    apt: pkg=python3-passlib
  - name: htpasswd_betatest file
    when: via.isBeta
    htpasswd:
      path: /etc/nginx/htpasswd_betatest
      name: betatester
      password: "{{via.betaPassword}}"
      owner: root
      group: www-data
      mode: 0640
    
  - name: options-ssl-nginx.conf file
    copy:
      src: files/nginx/options-ssl-nginx.conf
      dest: /etc/letsencrypt/options-ssl-nginx.conf
      owner: 'root'
      group: 'root'
  - name: ssl-dhparams.pem file
    copy:
      src: files/nginx/ssl-dhparams.pem
      dest: /etc/letsencrypt/ssl-dhparams.pem
      owner: 'root'
      group: 'root'

    
  #
  # MONIT
  #
  - name: monitrc file
    register: monitconfig1
    copy:
      src: files/monitrc
      dest: /etc/monit/monitrc
      owner: 'root'
      group: 'root'
    notify:
      - restart monit

  - name: monit config for via
    register: monitconfig2
    template:
      src: files/monit_via.j2
      dest: /etc/monit/conf.d/via
      owner: 'root'
      group: 'root'
    notify:
      - restart monit


  #
  # Postfix Mail
  #
  - name: main.cf file
    template:
      src: files/postfix/main.cf.j2
      dest: /etc/postfix/main.cf
      owner: 'root'
      group: 'root'
  - name: postfix restart
    service:
      name: postfix
      enabled: yes
      state: restarted

